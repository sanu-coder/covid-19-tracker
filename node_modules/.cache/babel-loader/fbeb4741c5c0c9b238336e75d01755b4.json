{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\OneDrive\\\\Desktop\\\\Covid-19 Tracker\\\\covid-19-tracker\\\\src\\\\Components\\\\Charts\\\\Charts.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { fetchDailyData } from '../../api';\nimport { Line, Bar } from 'react-chartjs-2';\nimport styles from './Charts.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Charts = ({\n  data,\n  country\n}) => {\n  _s();\n\n  const [dailyData, setDailyData] = useState({});\n  useEffect(() => {\n    const fetchAPI = async () => {\n      setDailyData(await fetchDailyData());\n    };\n\n    fetchAPI();\n  }, []);\n  const lineChart = dailyData.length ? /*#__PURE__*/_jsxDEV(Line, {\n    data: {\n      labels: dailyData.map(({\n        date\n      }) => date),\n      datasets: [{\n        data: dailyData.map(({\n          confirmed\n        }) => confirmed),\n        label: 'Infected',\n        borderColor: '#3333ff',\n        fill: true\n      }, {\n        data: dailyData.map(({\n          deaths\n        }) => deaths),\n        label: 'Deaths',\n        borderColor: 'red',\n        backgroundColor: 'rgba(255,0,0,0.5)',\n        fill: true\n      }]\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 15\n  }, this) : null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: [\" \", lineChart, \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 13\n  }, this);\n};\n\n_s(Charts, \"/d+kuJuKj12qpSq7YzoKfQOF8wE=\");\n\n_c = Charts;\nexport default Charts;\n\nvar _c;\n\n$RefreshReg$(_c, \"Charts\");","map":{"version":3,"sources":["C:/Users/user/OneDrive/Desktop/Covid-19 Tracker/covid-19-tracker/src/Components/Charts/Charts.jsx"],"names":["React","useState","useEffect","fetchDailyData","Line","Bar","styles","Charts","data","country","dailyData","setDailyData","fetchAPI","lineChart","length","labels","map","date","datasets","confirmed","label","borderColor","fill","deaths","backgroundColor","container"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,cAAT,QAA+B,WAA/B;AACA,SAASC,IAAT,EAAeC,GAAf,QAA0B,iBAA1B;AACA,OAAOC,MAAP,MAAmB,qBAAnB;;;AACA,MAAMC,MAAM,GAAG,CAAC;AAACC,EAAAA,IAAD;AAAMC,EAAAA;AAAN,CAAD,KAAoB;AAAA;;AAC3B,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BV,QAAQ,CAAC,EAAD,CAA1C;AACAC,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMU,QAAQ,GAAG,YAAW;AACxBD,MAAAA,YAAY,CAAC,MAAMR,cAAc,EAArB,CAAZ;AACH,KAFD;;AAIAS,IAAAA,QAAQ;AACX,GANQ,EAMN,EANM,CAAT;AAOA,QAAMC,SAAS,GACXH,SAAS,CAACI,MAAV,gBACE,QAAE,IAAF;AAAO,IAAA,IAAI,EACL;AACIC,MAAAA,MAAM,EAAEL,SAAS,CAACM,GAAV,CAAc,CAAC;AAAEC,QAAAA;AAAF,OAAD,KAAcA,IAA5B,CADZ;AAEIC,MAAAA,QAAQ,EAAE,CAAC;AACPV,QAAAA,IAAI,EAAEE,SAAS,CAACM,GAAV,CAAc,CAAC;AAAEG,UAAAA;AAAF,SAAD,KAAmBA,SAAjC,CADC;AAEPC,QAAAA,KAAK,EAAE,UAFA;AAGPC,QAAAA,WAAW,EAAE,SAHN;AAIPC,QAAAA,IAAI,EAAE;AAJC,OAAD,EAKP;AACCd,QAAAA,IAAI,EAAEE,SAAS,CAACM,GAAV,CAAc,CAAC;AAAEO,UAAAA;AAAF,SAAD,KAAgBA,MAA9B,CADP;AAECH,QAAAA,KAAK,EAAE,QAFR;AAGCC,QAAAA,WAAW,EAAE,KAHd;AAICG,QAAAA,eAAe,EAAE,mBAJlB;AAKCF,QAAAA,IAAI,EAAE;AALP,OALO;AAFd;AADN;AAAA;AAAA;AAAA;AAAA,UADF,GAkBQ,IAnBZ;AAqBI,sBACA;AAAK,IAAA,SAAS,EAAKhB,MAAM,CAACmB,SAA1B;AAAA,oBAA0CZ,SAA1C;AAAA;AAAA;AAAA;AAAA;AAAA,UADA;AAGH,CAjCT;;GAAMN,M;;KAAAA,M;AAkCE,eAAeA,MAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { fetchDailyData } from '../../api';\r\nimport { Line, Bar } from 'react-chartjs-2';\r\nimport styles from './Charts.module.css';\r\nconst Charts = ({data,country}) => {\r\n        const [dailyData, setDailyData] = useState({});\r\n        useEffect(() => {\r\n            const fetchAPI = async() => {\r\n                setDailyData(await fetchDailyData());\r\n            }\r\n\r\n            fetchAPI();\r\n        }, []);\r\n        const lineChart = (\r\n            dailyData.length ?\r\n            ( < Line data = {\r\n                    {\r\n                        labels: dailyData.map(({ date }) => date),\r\n                        datasets: [{\r\n                            data: dailyData.map(({ confirmed }) => confirmed),\r\n                            label: 'Infected',\r\n                            borderColor: '#3333ff',\r\n                            fill: true,\r\n                        }, {\r\n                            data: dailyData.map(({ deaths }) => deaths),\r\n                            label: 'Deaths',\r\n                            borderColor: 'red',\r\n                            backgroundColor: 'rgba(255,0,0,0.5)',\r\n                            fill: true,\r\n                        }],\r\n                    }\r\n                }\r\n                />):null\r\n            );\r\n            return ( \r\n            <div className = { styles.container } > { lineChart } </div>\r\n            )\r\n        }\r\n        export default Charts;"]},"metadata":{},"sourceType":"module"}